<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Dbpedia abstracts" position="(177.0, 259.0)" />
		<node id="1" name="Display" qualified_name="_textable.widgets.OWTextableDisplay.OWTextableDisplay" project_name="Orange3-Textable" version="" title="Display" position="(291.0, 10.0)" />
		<node id="2" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="TextSummarizer" position="(411.0, 271.0)" />
		<node id="3" name="Display" qualified_name="_textable.widgets.OWTextableDisplay.OWTextableDisplay" project_name="Orange3-Textable" version="" title="Display (1)" position="(706.0, 221.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Object" sink_channel="Segmentation" enabled="true" />
		<link id="1" source_node_id="0" sink_node_id="2" source_channel="Object" sink_channel="Object" enabled="true" />
		<link id="2" source_node_id="2" sink_node_id="3" source_channel="Object" sink_channel="Segmentation" enabled="true" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x05\x00\x00\x00\x01\xe0\x00\x00\x07\x81\x00\x00\x04r\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x04m\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x04m', 'scriptLibrary': [{'name': 'corpus.py', 'script': '"""\nScript pour widget "Python Script" dans Orange-Canvas pour\ncreer une segmentation a partir de DBpedia:\n    un segment contient le texte de la description dbpedia\n    et une annotation avec le nom de la personne\n"""\n\nimport re\nfrom SPARQLWrapper import SPARQLWrapper, JSON\nfrom LTTL.Segmentation import Segmentation\nfrom LTTL.Segment import Segment\nfrom LTTL.Input import Input\n \nsparql_endpoint = SPARQLWrapper("http://dbpedia.org/sparql")\nsparql_endpoint.setReturnFormat(JSON)\nquery = """\nselect distinct ?subject ?name ?abstract where {\n  ?subject a dbo:Artist;\n           dbo:abstract ?abstract;\n           foaf:name ?name;\n           rdfs:label ?label .\n   FILTER (lang(?abstract) = \'en\')\n   FILTER (lang(?name) = \'en\')\n   FILTER (lang(?label) = \'en\')\n} LIMIT 100\n\n"""\nsparql_endpoint.setQuery(query)\n\ndocuments = sparql_endpoint.queryAndConvert()\n\n# Changement de structure:\ndocuments = {entry["name"]["value"]:entry["abstract"]["value"] for entry in documents["results"]["bindings"] }\n\nsegmentation = Input(" ".join(documents.values()))\n\nsegments = list()\n\nstart = 0\nfor name, text in documents.items():\n    length = len(text)\n    segments.append(\n        Segment(\n            str_index=segmentation[0].str_index,\n            start = start,\n            end=start + length,\n            annotations={"id": name}\n        )\n    )\n    start = start + length + 1\n\nout_object = Segmentation(segments)\n', 'filename': 'D:/MyDocs/Enseignement/prog_texte/A17/seance07/tp07_solution/tp07_solution.py'}], 'scriptText': '"""\nScript pour widget "Python Script" dans Orange-Canvas pour\ncreer une segmentation a partir de DBpedia:\n    un segment contient le texte de la description dbpedia\n    et une annotation avec le nom de la personne\n"""\n\nimport re\nfrom SPARQLWrapper import SPARQLWrapper, JSON\nfrom LTTL.Segmentation import Segmentation\nfrom LTTL.Segment import Segment\nfrom LTTL.Input import Input\n \nsparql_endpoint = SPARQLWrapper("http://dbpedia.org/sparql")\nsparql_endpoint.setReturnFormat(JSON)\nquery = """\nselect distinct ?subject ?name ?abstract where {\n  ?subject a dbo:Artist;\n           dbo:abstract ?abstract;\n           foaf:name ?name;\n           rdfs:label ?label .\n   FILTER (lang(?abstract) = \'en\')\n   FILTER (lang(?name) = \'en\')\n   FILTER (lang(?label) = \'en\')\n} LIMIT 100\n\n"""\nsparql_endpoint.setQuery(query)\n\ndocuments = sparql_endpoint.queryAndConvert()\n\n# Changement de structure:\ndocuments = {entry["name"]["value"]:entry["abstract"]["value"] for entry in documents["results"]["bindings"] }\n\nsegmentation = Input(" ".join(documents.values()))\n\nsegments = list()\n\nstart = 0\nfor name, text in documents.items():\n    length = len(text)\n    segments.append(\n        Segment(\n            str_index=segmentation[0].str_index,\n            start = start,\n            end=start + length,\n            annotations={"id": name}\n        )\n    )\n    start = start + length + 1\n\nout_object = Segmentation(segments)\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00n\x00\x00\x00n\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="1" format="literal">{'autoSend': True, 'basicFormatHTML': True, 'controlAreaVisible': True, 'customFormat': '%(__content__)s', 'customFormatting': True, 'displayAdvancedSettings': False, 'encoding': 'utf8', 'footer': '', 'header': '', 'lastLocation': '.', 'limitNumberOfSegments': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x05\x00\x00\x00\x01\xe0\x00\x00\x07\x81\x00\x00\x03\xde\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x03\xd9\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x03\xd9', 'segmentDelimiter': '\\n', 'uuid': 'e03324fc-fc09-4d10-be1e-f47478fec4b2', '__version__': 1, '_TextableUtils_settings_version__': (0, 16)}</properties>
		<properties node_id="2" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x05\x00\x00\x00\x01\xe0\x00\x00\x07\x81\x00\x00\x04r\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x04m\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x04m', 'scriptLibrary': [{'name': 'textable-summarizer.py', 'script': '"""\nTexttable summarizer\n"""\n\nfrom LTTL.Segment import Segment\nfrom LTTL.Segmentation import Segmentation\n\ndef summarize(document):\n\treturn """This is a summary"""\n\ndef main():\n    """Programme principal"""\n    global out_object\n\n    segments = list()\n    for segment in in_object:\n        annotations = segment.annotations.copy()\n        annotations["summary"] = summarize(segment.get_content())\n        segments.append(Segment(\n            str_index=segment.str_index,\n            start=segment.start,\n            end=segment.end,\n            annotations=annotations\n        ))\n\n    out_object = Segmentation(segments)\n\n\nif __name__ == "builtins":\n    if in_object:\n        main()\n', 'filename': 'D:/MyDocs/Enseignement/prog_texte/A17/seance07/tp07_solution/tp07_solution.py'}], 'scriptText': '"""\nTexttable summarizer\n"""\n\nfrom LTTL.Segment import Segment\nfrom LTTL.Segmentation import Segmentation\n\ndef summarize(document):\n\treturn """This is a summary"""\n\ndef main():\n    """Programme principal"""\n    global out_object\n\n    segments = list()\n    for segment in in_object:\n        annotations = segment.annotations.copy()\n        annotations["summary"] = summarize(segment.get_content())\n        segments.append(Segment(\n            str_index=segment.str_index,\n            start=segment.start,\n            end=segment.end,\n            annotations=annotations\n        ))\n\n    out_object = Segmentation(segments)\n\n\nif __name__ == "builtins":\n    if in_object:\n        main()\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00n\x00\x00\x00n\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="3" format="literal">{'autoSend': True, 'basicFormatHTML': True, 'controlAreaVisible': True, 'customFormat': '%(__content__)s', 'customFormatting': True, 'displayAdvancedSettings': False, 'encoding': 'utf8', 'footer': '', 'header': '', 'lastLocation': '.', 'limitNumberOfSegments': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x05\x00\x00\x00\x01\xe0\x00\x00\x07\x81\x00\x00\x03\xde\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x03\xd9\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x05\x01\x00\x00\x01\xfa\x00\x00\x07\x80\x00\x00\x03\xd9', 'segmentDelimiter': '\\n', 'uuid': '1642e4dc-9b29-4f6c-83ed-168e26f13382', '__version__': 1, '_TextableUtils_settings_version__': (0, 16)}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
